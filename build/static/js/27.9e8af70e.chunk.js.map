{"version":3,"sources":["exercise/03.md","../node_modules/@mdx-js/react/dist/esm.js"],"names":["readingTime","layoutProps","MDXContent","components","props","mdxType","parentName","isMDXComponent","tableOfContents","id","level","title","children","frontMatter","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","sourceSymbolKeys","prototype","propertyIsEnumerable","call","MDXContext","React","createContext","useMDXComponents","contextComponents","useContext","allComponents","DEFAULTS","inlineCode","wrapper","_ref","createElement","Fragment","MDXCreateElement","forwardRef","ref","propComponents","originalType","etc","type","Component","concat","args","argsLength","createElementArgArray","Array","newProps","hasOwnProperty","displayName"],"mappings":"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","file":"static/js/27.9e8af70e.chunk.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"3 min read\",\"minutes\":2.38,\"time\":142800,\"words\":476}\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"utilisation-de-jsx\"\n    }}>{`Utilisation de JSX`}</h1>\n    <h3 {...{\n      \"id\": \"-savoir-manipuler-jsx-dans-react\"\n    }}>{`üí° Savoir manipuler JSX dans React`}</h3>\n    <h2 {...{\n      \"id\": \"-tes-notes\"\n    }}>{`üìù Tes notes`}</h2>\n    <p>{`Detaille ce que tu as appris ici\n`}<inlineCode parentName=\"p\">{`src/exercise/03.md`}</inlineCode>{`ou¬†sur¬†une¬†page¬†`}<a parentName=\"p\" {...{\n        \"href\": \"https://go.mikecodeur.com/course-notes-template\"\n      }}>{`Notion`}</a></p>\n    <h2 {...{\n      \"id\": \"comprendre\"\n    }}>{`Comprendre`}</h2>\n    <p>{`JSX pour `}<em parentName=\"p\">{`JavaScript XML`}</em>{` est simplifie √©norm√©ment l‚Äôutilisation de React. Il\npermet d‚Äôutiliser des composants React sous forme de balise XML (donc HTML).\nExemple `}<inlineCode parentName=\"p\">{`<Welcome >`}</inlineCode>{` . Avec JSX et React c‚Äôest un peu comme si l‚Äôon pouvait\ncr√©er de nouvelles balises HTML.`}</p>\n    <p>{`Il permet aussi des manipulations d‚Äô√©l√©ments HTML/DOM assez utiles comme celle\nci`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"data-language\": \"jsx\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token keyword\\\">const</span> h1Hello <span class=\\\"token operator\\\">=</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>h1</span> <span class=\\\"token attr-name\\\">id</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation attr-equals\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>header<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">Bonjour, monde !</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>h1</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">//Ceci n'est ni du HTML ni un String</span>\\n\\n<span class=\\\"token comment\\\">// ‚Üì Sortie en JS/React ‚Üì</span>\\n<span class=\\\"token keyword\\\">const</span> h1Hello <span class=\\\"token operator\\\">=</span> React<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">createElement</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"h1\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span>id<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"header\\\"</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> \\\"Bonjour<span class=\\\"token punctuation\\\">,</span> monde <span class=\\\"token operator\\\">!</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\"\n        }\n      }}></code></pre>\n    <p>{`JSX n‚Äôest pas reconnu par les navigateurs, car ce n‚Äôest pas du JavaScript, pour\ncela on utilise un \"`}<em parentName=\"p\">{`transpilateur`}</em>{`\" (sorte de compilateur) qui va g√©n√©rer du\ncode compr√©hensible par les navigateurs. `}<a parentName=\"p\" {...{\n        \"href\": \"https://babeljs.io/\"\n      }}>{`Babel`}</a>{` permet\npermet de faire cela, tu peux t‚Äôamuser sur la page d‚Äôaccueil de Babel de\n`}<em parentName=\"p\">{`transpiler.`}</em>{` Pour utiliser Babel il suffit de l‚Äôajouter dans le `}<inlineCode parentName=\"p\">{`<head>`}</inlineCode>{` de\nnotre page html. On pourra s‚Äôailleur y voir le code transpil√©.`}</p>\n    <p>{`üìë Le lien vers la doc de JSX\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://fr.reactjs.org/docs/introducing-jsx.html\"\n      }}>{`https://fr.reactjs.org/docs/introducing-jsx.html`}</a></p>\n    <h2 {...{\n      \"id\": \"exercice\"\n    }}>{`Exercice`}</h2>\n    <p>{`Utilise Babel dans notre page HTML pour g√©n√©rer la m√™me chose que dans les\nexercices pr√©c√©dents. Pour importer Babel`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-markup\",\n        \"data-language\": \"markup\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>script</span> <span class=\\\"token attr-name\\\">src</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation attr-equals\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>https://unpkg.com/@babel/standalone@7.15.1/babel.js<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token script\\\"></span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>script</span><span class=\\\"token punctuation\\\">></span></span>\\n\"\n        }\n      }}></code></pre>\n    <blockquote>\n      <p parentName=\"blockquote\">{`üí° Note : Pour commenter en JSX `}<inlineCode parentName=\"p\">{`{/* Ceci est un commentaire */}`}</inlineCode></p>\n    </blockquote>\n    <h2 {...{\n      \"id\": \"bonus\"\n    }}>{`Bonus`}</h2>\n    <h3 {...{\n      \"id\": \"1--passer-des-variables\"\n    }}>{`1. üöÄ Passer des variables`}</h3>\n    <p>{`Au lieu de mettre du code en ‚Äúdur‚Äù comme le nom de la classe et le texte a\nafficher, passer par des variables. Comment r√©utiliser ces deux variable et les\nutiliser dans mon √©l√©ment React.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"data-language\": \"jsx\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token keyword\\\">const</span> welcome <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">'Bienvenue'</span>\\n<span class=\\\"token keyword\\\">const</span> site <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">'sur mon site'</span>\\n<span class=\\\"token keyword\\\">const</span> children <span class=\\\"token operator\\\">=</span> <span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>welcome<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\"> </span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>site<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token template-punctuation string\\\">`</span></span>\\n<span class=\\\"token keyword\\\">const</span> className <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">'rootContainer'</span>\\n\"\n        }\n      }}></code></pre>\n    <h3 {...{\n      \"id\": \"2--passer-par-une-liste-de-variables-spread-operateur\"\n    }}>{`2. üöÄ Passer par une liste de variables (spread operateur)`}</h3>\n    <p>{`Au lieu de passer toutes les variables une a une √† l‚Äô√©l√©ment JSX, passer par un\n`}<inlineCode parentName=\"p\">{`spread operator`}</inlineCode>{` `}<inlineCode parentName=\"p\">{`...props`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"data-language\": \"jsx\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token keyword\\\">const</span> children <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">'Bienvenue sur mon site'</span>\\n<span class=\\\"token keyword\\\">const</span> className <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">'rootContainer'</span>\\n<span class=\\\"token keyword\\\">const</span> props <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>children<span class=\\\"token punctuation\\\">,</span> className<span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token keyword\\\">const</span> divEl <span class=\\\"token operator\\\">=</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span> <span class=\\\"token punctuation\\\">/></span></span> <span class=\\\"token comment\\\">//comment passer tous les props ?</span>\\n\"\n        }\n      }}></code></pre>\n    <h3 {...{\n      \"id\": \"3--imbriquer-les-√©l√©ments-jsx\"\n    }}>{`3. üöÄ Imbriquer les √©l√©ments JSX`}</h3>\n    <p>{`Reproduis l‚Äôimbrication de l‚Äôexercice pr√©c√©dent en JSX, sans passer par les\n`}<inlineCode parentName=\"p\">{`spread operator`}</inlineCode>{` ni `}<inlineCode parentName=\"p\">{`children`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"data-language\": \"jsx\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>body</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n  </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span> <span class=\\\"token attr-name\\\">id</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation attr-equals\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>root<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n    </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span> <span class=\\\"token attr-name\\\">class</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation attr-equals\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>rootContainer<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n      </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>h1</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">Bienvenue</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>h1</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n      </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>h2</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">Commencez ici</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>h2</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n      </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>p</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n        Lorem Ipsum is simply dummy text of the printing and typesetting\\n        industry\\n      </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>p</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n    </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n  </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>body</span><span class=\\\"token punctuation\\\">></span></span>\\n\"\n        }\n      }}></code></pre>\n    <h3 {...{\n      \"id\": \"4--imbriquer-les-√©l√©ments-jsx-avec-fragment\"\n    }}>{`4. üöÄ Imbriquer les √©l√©ments JSX (avec fragment)`}</h3>\n    <p>{`Reproduis l‚Äôimbrication de l‚Äôexercice pr√©c√©dent en JSX en passant par les\n`}<inlineCode parentName=\"p\">{`spread operator`}</inlineCode>{` et `}<inlineCode parentName=\"p\">{`children`}</inlineCode>{` et `}<inlineCode parentName=\"p\">{`fragment`}</inlineCode></p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`üí° `}<em parentName=\"p\">{`Les fragments React servent √† regrouper des √©l√©ments sans avoir √† les\najouter dans un √©l√©ment parent`}</em></p>\n    </blockquote>\n    <p>{`üìë Le lien vers la doc\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://fr.reactjs.org/docs/fragments.html\"\n      }}>{`https://fr.reactjs.org/docs/fragments.html`}</a></p>\n    <h2 {...{\n      \"id\": \"aller-plus-loin\"\n    }}>{`Aller plus loin`}</h2>\n    <p>{`üìë Le lien vers la doc\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://fr.reactjs.org/docs/introducing-jsx.html\"\n      }}>{`https://fr.reactjs.org/docs/introducing-jsx.html`}</a></p>\n    <h2 {...{\n      \"id\": \"-feedback\"\n    }}>{`üêú Feedback`}</h2>\n    <p>{`Remplir le formulaire le\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://go.mikecodeur.com/cours-react-avis?entry.1430994900=React%20Fondamentaux&entry.533578441=03%20Utilisation%20de%20JSX\"\n      }}>{`formulaire de FeedBack.`}</a></p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  {\n    id: \"-savoir-manipuler-jsx-dans-react\",\n    level: 3,\n    title: \"üí° Savoir manipuler JSX dans React\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"-tes-notes\",\n    level: 2,\n    title: \"üìù Tes notes\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"comprendre\",\n    level: 2,\n    title: \"Comprendre\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"exercice\",\n    level: 2,\n    title: \"Exercice\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"bonus\",\n    level: 2,\n    title: \"Bonus\",\n    children: [\n        {\n              id: \"1--passer-des-variables\",\n              level: 3,\n              title: \"1. üöÄ Passer des variables\",\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"2--passer-par-une-liste-de-variables-spread-operateur\",\n              level: 3,\n              title: \"2. üöÄ Passer par une liste de variables (spread operateur)\",\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"3--imbriquer-les-√©l√©ments-jsx\",\n              level: 3,\n              title: \"3. üöÄ Imbriquer les √©l√©ments JSX\",\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"4--imbriquer-les-√©l√©ments-jsx-avec-fragment\",\n              level: 3,\n              title: \"4. üöÄ Imbriquer les √©l√©ments JSX (avec fragment)\",\n              children: [\n                      \n                    ]\n            }\n      ]\n  },\n{\n    id: \"aller-plus-loin\",\n    level: 2,\n    title: \"Aller plus loin\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"-feedback\",\n    level: 2,\n    title: \"üêú Feedback\",\n    children: [\n        \n      ]\n  }\n]\n\nexport const frontMatter = {}\n\n","import React from 'react';\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar isFunction = function isFunction(obj) {\n  return typeof obj === 'function';\n};\n\nvar MDXContext = /*#__PURE__*/React.createContext({});\nvar withMDXComponents = function withMDXComponents(Component) {\n  return function (props) {\n    var allComponents = useMDXComponents(props.components);\n    return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n      components: allComponents\n    }));\n  };\n};\nvar useMDXComponents = function useMDXComponents(components) {\n  var contextComponents = React.useContext(MDXContext);\n  var allComponents = contextComponents;\n\n  if (components) {\n    allComponents = isFunction(components) ? components(contextComponents) : _objectSpread2(_objectSpread2({}, contextComponents), components);\n  }\n\n  return allComponents;\n};\nvar MDXProvider = function MDXProvider(props) {\n  var allComponents = useMDXComponents(props.components);\n  return /*#__PURE__*/React.createElement(MDXContext.Provider, {\n    value: allComponents\n  }, props.children);\n};\n\nvar TYPE_PROP_NAME = 'mdxType';\nvar DEFAULTS = {\n  inlineCode: 'code',\n  wrapper: function wrapper(_ref) {\n    var children = _ref.children;\n    return /*#__PURE__*/React.createElement(React.Fragment, {}, children);\n  }\n};\nvar MDXCreateElement = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var propComponents = props.components,\n      mdxType = props.mdxType,\n      originalType = props.originalType,\n      parentName = props.parentName,\n      etc = _objectWithoutProperties(props, [\"components\", \"mdxType\", \"originalType\", \"parentName\"]);\n\n  var components = useMDXComponents(propComponents);\n  var type = mdxType;\n  var Component = components[\"\".concat(parentName, \".\").concat(type)] || components[type] || DEFAULTS[type] || originalType;\n\n  if (propComponents) {\n    return /*#__PURE__*/React.createElement(Component, _objectSpread2(_objectSpread2({\n      ref: ref\n    }, etc), {}, {\n      components: propComponents\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _objectSpread2({\n    ref: ref\n  }, etc));\n});\nMDXCreateElement.displayName = 'MDXCreateElement';\nfunction createElement (type, props) {\n  var args = arguments;\n  var mdxType = props && props.mdxType;\n\n  if (typeof type === 'string' || mdxType) {\n    var argsLength = args.length;\n    var createElementArgArray = new Array(argsLength);\n    createElementArgArray[0] = MDXCreateElement;\n    var newProps = {};\n\n    for (var key in props) {\n      if (hasOwnProperty.call(props, key)) {\n        newProps[key] = props[key];\n      }\n    }\n\n    newProps.originalType = type;\n    newProps[TYPE_PROP_NAME] = typeof type === 'string' ? type : mdxType;\n    createElementArgArray[1] = newProps;\n\n    for (var i = 2; i < argsLength; i++) {\n      createElementArgArray[i] = args[i];\n    }\n\n    return React.createElement.apply(null, createElementArgArray);\n  }\n\n  return React.createElement.apply(null, args);\n}\n\nexport { MDXContext, MDXProvider, createElement as mdx, useMDXComponents, withMDXComponents };\n"],"sourceRoot":""}