{"ast":null,"code":"var _jsxFileName = \"/Users/chokdee/Library/Mobile Documents/com~apple~CloudDocs/Coding/GitHub/Fondamentaux_React_Mastery/src/exercise/05.js\";\n// Ajouter du Style CSS\n// http://localhost:3000/isolated/exercise/05.js\nimport * as React from 'react';\nimport '../05-styles.css'; // üê∂ Met du style sur les 3 conteneurs en te basant sur leur texte.\n// üê∂ Nous avons import√© le fichier CSS qui contient des classes\n// 'container' 'container-small' etc ...\n// üê∂ Utilise le prop `className` pour les propri√©t√©s g√©n√©rales du conteneur et une\n// une specificit√©. (className aura donc 2 classes CSS)\n// ü§ñ className='container container-small' par exemple\n// üê∂ Utilise ensuite du CSS Inline avec le prop `style` pour gerer le background color\n// et la couleur du texte\n// ü§ñ style:{{color:'white', backgroundColor:'red'}}\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst smallContainer = /*#__PURE__*/_jsxDEV(\"div\", {\n  children: \"Petit conteneur dark texte blanc\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 19,\n  columnNumber: 24\n}, this);\n\nconst mediumContainer = /*#__PURE__*/_jsxDEV(\"div\", {\n  children: \"Moyen conteneur rose texte noire\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 20,\n  columnNumber: 25\n}, this);\n\nconst largeContainer = /*#__PURE__*/_jsxDEV(\"div\", {\n  children: \"Grand conteneur vert rose texte noire\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 21,\n  columnNumber: 24\n}, this);\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [smallContainer, mediumContainer, largeContainer]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/chokdee/Library/Mobile Documents/com~apple~CloudDocs/Coding/GitHub/Fondamentaux_React_Mastery/src/exercise/05.js"],"names":["React","smallContainer","mediumContainer","largeContainer","App"],"mappings":";AAAA;AACA;AAEA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAO,kBAAP,C,CAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;;;AAEA,MAAMC,cAAc,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAvB;;AACA,MAAMC,eAAe,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAxB;;AACA,MAAMC,cAAc,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAvB;;AAEA,SAASC,GAAT,GAAe;AACb,sBACE;AAAA,eACGH,cADH,EAEGC,eAFH,EAGGC,cAHH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;KARQC,G;AAUT,eAAeA,GAAf","sourcesContent":["// Ajouter du Style CSS\n// http://localhost:3000/isolated/exercise/05.js\n\nimport * as React from 'react'\nimport '../05-styles.css'\n\n// üê∂ Met du style sur les 3 conteneurs en te basant sur leur texte.\n// üê∂ Nous avons import√© le fichier CSS qui contient des classes\n// 'container' 'container-small' etc ...\n\n// üê∂ Utilise le prop `className` pour les propri√©t√©s g√©n√©rales du conteneur et une\n// une specificit√©. (className aura donc 2 classes CSS)\n// ü§ñ className='container container-small' par exemple\n\n// üê∂ Utilise ensuite du CSS Inline avec le prop `style` pour gerer le background color\n// et la couleur du texte\n// ü§ñ style:{{color:'white', backgroundColor:'red'}}\n\nconst smallContainer = <div>Petit conteneur dark texte blanc</div>\nconst mediumContainer = <div>Moyen conteneur rose texte noire</div>\nconst largeContainer = <div>Grand conteneur vert rose texte noire</div>\n\nfunction App() {\n  return (\n    <div>\n      {smallContainer}\n      {mediumContainer}\n      {largeContainer}\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}