{"code":"(this[\"webpackJsonp@mikecodeur/react-fondamentaux\"]=this[\"webpackJsonp@mikecodeur/react-fondamentaux\"]||[]).push([[36],{238:function(e,t,n){\"use strict\";n.r(t),t.default=\"\\x3c!-- Manipuler le DOM avec React --\\x3e\\n\\x3c!-- http://localhost:3000/alone/exercise/02.html --\\x3e\\n\\n<html>\\n  <head>\\n    <script src=\\\"https://unpkg.com/react@17.0.2/umd/react.development.js\\\"><\\/script>\\n    <script src=\\\"https://unpkg.com/react-dom@17.0.2/umd/react-dom.development.js\\\"><\\/script>\\n    \\x3c!-- \\u26cf\\ufe0f Ajoute Babel en supprimant les commentaires de la ligne ci-dessous --\\x3e\\n    \\x3c!-- <script src=\\\"https://unpkg.com/@babel/standalone@7.15.1/babel.js\\\"><\\/script> --\\x3e\\n  </head>\\n  <body>\\n    <div id=\\\"root\\\"></div>\\n    \\x3c!-- \\ud83d\\udc36 Pour que Babel prenne en compte le code JavaScipt, il faut rajouter un attribut `type=\\\"text/babel\\\"`\\n    A la balise <script> --\\x3e\\n    <script>\\n      const rootEl = document.getElementById('root')\\n\\n      // \\ud83d\\udc36 Il va falloir maintenant r\\xe9impl\\xe9menter avec JSX\\n      const divEl = document.createElement('div')\\n      divEl.textContent = 'Bienvenue sur mon site'\\n      divEl.className = 'rootContainer'\\n\\n      // \\ud83d\\udc36 Cr\\xe9e une variable divEl qui contient du JSX (une div avec un texte et une class comme\\n      // le resultat final html attendu)\\n      // \\ud83e\\udd16 Attention aux attributs en React qui diff\\xe8rent l\\xe9g\\xe8rement du HTML ex : class -> className\\n      // \\ud83d\\udcd1 https://fr.reactjs.org/docs/dom-elements.html\\n\\n      document.getElementById('root').append(divEl)\\n    <\\/script>\\n  </body>\\n</html>\\n\"}}]);","name":"static/js/36.4db9a6ed.chunk.js","map":{"version":3,"sources":["static/js/36.4db9a6ed.chunk.js"],"names":["this","push","238","module","__webpack_exports__","__webpack_require__","r"],"mappings":"CAACA,KAAK,8CAAgDA,KAAK,+CAAiD,IAAIC,KAAK,CAAC,CAAC,IAAI,CAErHC,IACA,SAAUC,EAAQC,EAAqBC,GAE7C,aACAA,EAAoBC,EAAEF,GACOA,EAA6B,QAAI"},"input":"(this[\"webpackJsonp@mikecodeur/react-fondamentaux\"] = this[\"webpackJsonp@mikecodeur/react-fondamentaux\"] || []).push([[36],{\n\n/***/ 238:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"<!-- Manipuler le DOM avec React -->\\n<!-- http://localhost:3000/alone/exercise/02.html -->\\n\\n<html>\\n  <head>\\n    <script src=\\\"https://unpkg.com/react@17.0.2/umd/react.development.js\\\"></script>\\n    <script src=\\\"https://unpkg.com/react-dom@17.0.2/umd/react-dom.development.js\\\"></script>\\n    <!-- ⛏️ Ajoute Babel en supprimant les commentaires de la ligne ci-dessous -->\\n    <!-- <script src=\\\"https://unpkg.com/@babel/standalone@7.15.1/babel.js\\\"></script> -->\\n  </head>\\n  <body>\\n    <div id=\\\"root\\\"></div>\\n    <!-- 🐶 Pour que Babel prenne en compte le code JavaScipt, il faut rajouter un attribut `type=\\\"text/babel\\\"`\\n    A la balise <script> -->\\n    <script>\\n      const rootEl = document.getElementById('root')\\n\\n      // 🐶 Il va falloir maintenant réimplémenter avec JSX\\n      const divEl = document.createElement('div')\\n      divEl.textContent = 'Bienvenue sur mon site'\\n      divEl.className = 'rootContainer'\\n\\n      // 🐶 Crée une variable divEl qui contient du JSX (une div avec un texte et une class comme\\n      // le resultat final html attendu)\\n      // 🤖 Attention aux attributs en React qui diffèrent légèrement du HTML ex : class -> className\\n      // 📑 https://fr.reactjs.org/docs/dom-elements.html\\n\\n      document.getElementById('root').append(divEl)\\n    </script>\\n  </body>\\n</html>\\n\");\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["/Users/chokdee/Library/Mobile Documents/com~apple~CloudDocs/Coding/GitHub/Fondamentaux_React_Mastery/node_modules/raw-loader/dist/cjs.js!/Users/chokdee/Library/Mobile Documents/com~apple~CloudDocs/Coding/GitHub/Fondamentaux_React_Mastery/src/exercise/03.html"],"names":[],"mappings":";;;;;;AAAA;AAAe,y3CAA0zC,E","file":"x","sourcesContent":["export default \"<!-- Manipuler le DOM avec React -->\\n<!-- http://localhost:3000/alone/exercise/02.html -->\\n\\n<html>\\n  <head>\\n    <script src=\\\"https://unpkg.com/react@17.0.2/umd/react.development.js\\\"></script>\\n    <script src=\\\"https://unpkg.com/react-dom@17.0.2/umd/react-dom.development.js\\\"></script>\\n    <!-- ⛏️ Ajoute Babel en supprimant les commentaires de la ligne ci-dessous -->\\n    <!-- <script src=\\\"https://unpkg.com/@babel/standalone@7.15.1/babel.js\\\"></script> -->\\n  </head>\\n  <body>\\n    <div id=\\\"root\\\"></div>\\n    <!-- 🐶 Pour que Babel prenne en compte le code JavaScipt, il faut rajouter un attribut `type=\\\"text/babel\\\"`\\n    A la balise <script> -->\\n    <script>\\n      const rootEl = document.getElementById('root')\\n\\n      // 🐶 Il va falloir maintenant réimplémenter avec JSX\\n      const divEl = document.createElement('div')\\n      divEl.textContent = 'Bienvenue sur mon site'\\n      divEl.className = 'rootContainer'\\n\\n      // 🐶 Crée une variable divEl qui contient du JSX (une div avec un texte et une class comme\\n      // le resultat final html attendu)\\n      // 🤖 Attention aux attributs en React qui diffèrent légèrement du HTML ex : class -> className\\n      // 📑 https://fr.reactjs.org/docs/dom-elements.html\\n\\n      document.getElementById('root').append(divEl)\\n    </script>\\n  </body>\\n</html>\\n\";"]}}